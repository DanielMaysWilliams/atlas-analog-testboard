import serial, time
import serial.tools.list_ports as LP
import sys
from platform import system
# from __future__ import print_function

def findPort():
    manufacturer = 'Devantech Ltd.'
    description = 'USB_ISS_'
    platform = system()
    device = None
    if platform=='Windows':
        ports = LP.comports()
        if ports is None:
            print('No USB found for clock chip')
            sys.exit(1)
        
    elif platform=='Darwin' or platform=='Linux':
        ports = LP.grep(description)
        if ports is None:
            print('No USB found for clock chip')
            sys.exit(1)

    for port in ports:
        if port is None: continue
        if port.manufacturer=='FTDI': continue
        if port.manufacturer==manufacturer:
            device = port.device

    if device is None:
        print('No USB found')
        sys.exit(1)

    return device

def setupSerial(port,baudrate=9600,parity='N',stopbits=1,timeout=2,bytesize=8):
    
    port = serial.Serial(port=port,
                        baudrate = baudrate,
                        parity = parity,
                        stopbits = stopbits,
                        timeout=timeout,
                        bytesize=bytesize)

    return port

def writeToUSBISS(port,message):
    hexMessage = [int(m,16) for m in message] 
    BAMessage = bytearray(hexMessage)
    port.write(BAMessage)
    return True

def closePort(port):
    port.close()


def byteArrayToString(inputByteArray):
    '''Convert raw data readout to a python string object.'''
    outputString = ''
    for byte in inputByteArray:
        outputString += '{0:08b}'.format(byte)
    return outputString

def byteArrayToHex(inputByteArray):
    outputString = ''
    for byte in inputByteArray:
        outputString += ' {0:02x}'.format(byte)

    return outputString

def readFromUSBISS(port):
    outputarray = bytearray()
    time.sleep(0.5)
    while len(outputarray)<port.in_waiting:
        output = port.read(port.in_waiting)
        for b in output:
            outputarray.append(b)
    outputString = byteArrayToHex(outputarray)
    print('{0} ->{1}'.format(port.name,outputString))
    return outputString

def waitForUser():
    user_input = input("Press enter to continue >>>>> ")

def selectPage(port,pageNumber):
    # print('--- Selecting Page {} ---'.format(pageNumber))
    writeMessage = ['0x55','0xd0','0x01','0x01',pageNumber]
    writeToUSBISS(port,writeMessage)

def writeToRegister(port,registerAddr,registerData):
    writeMessage = ['0x055','0xd0',registerAddr,'0x01',registerData]
    writeToUSBISS(port,writeMessage)

def readFromRegister(port,registerAddr):
    readMessage = ['0x55','0xd1',registerAddr,'0x01']
    writeToUSBISS(port,readMessage)
    readByte = readFromUSBISS(port)
    return readByte

def writeData(port,highByteList,lowByteList,dataList):
    currentPage = highByteList[0]
    selectPage(port,currentPage)
    for configAdHigh,configAdLow,configData in zip(highByteList,lowByteList,dataList):
        if configAdHigh != currentPage:
            selectPage(port,configAdHigh)
            currentPage = configAdHigh
        writeToRegister(port,configAdLow,configData)

def poll(port):
    counter = 0
    maxIter = 50
    isDeviceReady = False
    while( (not isDeviceReady) and counter < maxIter ):
        readMessage = readFromRegister(port, '0xFE')
        print(f'Device ready status: {readMessage}')
        if readMessage == ' 0F' or readMessage == ' 0f':
            isDeviceReady = True
            print('Success!')
        time.sleep(1)
        counter += 1

    return isDeviceReady


def burnToNVM(port):
    counter = 0
    maxIter = 10
    selectPage(port,'0x00')
    nvmBankValue = readFromRegister(port,'0xE2')
    print(f'nvmBankValue if {nvmBankValue}')
    while nvmBankValue != ' 03' and counter < maxIter:
        nvmBankValue = readFromRegister(port, '0xE2')
        print(f'nvmBankValue if {nvmBankValue}')
        counter += 1

    input("Press enter to write to NVM_WRITE\n")

    readyStatus = False
    writeToRegister(port, registerAddr='0xE3', registerData='0xC7')
    readyStatus = poll(port)
    if not readyStatus: print('Device not ready!')

    input("Press enter to write NVM contents into non-volatile memory\n")

    readyStatus = False
    writeToRegister(port, registerAddr='0xE4', registerData='0x01')
    readyStatus = poll(port)
    if not readyStatus: print('Device not ready!')

    nvmBankValue = readFromRegister(port,'0xE2')
    print(nvmBankValue)

def configureClockChip():

    operatingMode = {'I2C_S_20KHZ':'0x20','I2C_S_50KHZ':'0x30','I2C_S_100KHZ':'0x40','I2C_S_400KHZ':'0x50','I2C_H_100KHZ':'0x60','I2C_H_400KHZ':'0x70','I2C_H_1000KHZ':'0x80'}

    portFound = findPort()
    port = setupSerial(portFound)

    # Initialize USB-ISS
    # print('--- Init ---')
    writeMessage = ['0x5a','0x01']
    writeToUSBISS(port,writeMessage)

    writeMessage = ['0x5a','0x03']
    writeToUSBISS(port,writeMessage)

    writeMessage = ['0x5a','0x02','0x71','0x00','0x9B']
    writeToUSBISS(port,writeMessage)

    deviceAddrWrite = '0xd0'
    deviceAddrRead  = '0xd1'

    # print('--- Preamble ---')
    configPreambleAddrHighByte = ['0x0B','0x0B','0x05']
    configPreambleAddrLowByte  = ['0x24','0x25','0x40']
    configPreambleData         = ['0xC0','0x00','0x01']

    writeData(port,configPreambleAddrHighByte,configPreambleAddrLowByte,configPreambleData)

    # # # ### WAIT 300 msec
    time.sleep(0.3)

    # print('--- Configuration ---')
    configAddrHighByte = ['0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x01','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x02','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x03','0x04','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x05','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x08','0x09','0x09','0x09','0x09','0x09','0x09','0x09','0x0A','0x0A','0x0A','0x0A','0x0A','0x0A','0x0A','0x0A','0x0A','0x0B','0x0B','0x0B','0x0B','0x0B','0x0B','0x0B']
    configAddrLowByte =  ['0x06','0x07','0x08','0x0B','0x16','0x17','0x18','0x19','0x1A','0x2B','0x2C','0x2D','0x2E','0x2F','0x30','0x31','0x32','0x33','0x34','0x35','0x36','0x37','0x38','0x39','0x3A','0x3B','0x3C','0x3D','0x3F','0x40','0x41','0x42','0x43','0x44','0x45','0x46','0x47','0x48','0x49','0x4A','0x4B','0x4C','0x4D','0x4E','0x4F','0x50','0x51','0x52','0x53','0x54','0x55','0x56','0x57','0x58','0x59','0x5A','0x5B','0x5C','0x5D','0x5E','0x5F','0x60','0x61','0x62','0x63','0x64','0x65','0x66','0x67','0x68','0x69','0x92','0x93','0x95','0x96','0x98','0x9A','0x9B','0x9D','0x9E','0xA0','0xA2','0xA9','0xAA','0xAB','0xAC','0xE5','0xEA','0xEB','0xEC','0xED','0x02','0x08','0x09','0x0A','0x0B','0x0D','0x0E','0x0F','0x10','0x12','0x13','0x14','0x15','0x17','0x18','0x19','0x1A','0x1C','0x1D','0x1E','0x1F','0x21','0x22','0x23','0x24','0x26','0x27','0x28','0x29','0x2B','0x2C','0x2D','0x2E','0x30','0x31','0x32','0x33','0x3A','0x3B','0x3C','0x3D','0x3F','0x40','0x41','0x42','0x06','0x08','0x09','0x0A','0x0B','0x0C','0x0D','0x0E','0x0F','0x10','0x11','0x12','0x13','0x14','0x15','0x16','0x17','0x18','0x19','0x1A','0x1B','0x1C','0x1D','0x1E','0x1F','0x20','0x21','0x22','0x23','0x24','0x25','0x26','0x27','0x28','0x29','0x2A','0x2B','0x2C','0x2D','0x2E','0x2F','0x31','0x32','0x33','0x34','0x35','0x36','0x37','0x38','0x39','0x3A','0x3B','0x3C','0x3D','0x3E','0x4A','0x4B','0x4C','0x4D','0x4E','0x4F','0x50','0x51','0x52','0x53','0x54','0x55','0x56','0x57','0x58','0x59','0x5A','0x5B','0x5C','0x5D','0x5E','0x5F','0x60','0x61','0x62','0x63','0x64','0x68','0x69','0x6A','0x6B','0x6C','0x6D','0x6E','0x6F','0x70','0x71','0x72','0x8A','0x8B','0x8C','0x8D','0x8E','0x8F','0x90','0x91','0x94','0x96','0x97','0x99','0x9D','0x9E','0x9F','0xA9','0xAA','0xAB','0xB7','0x02','0x03','0x04','0x05','0x06','0x07','0x08','0x09','0x0A','0x0B','0x0C','0x0D','0x0E','0x0F','0x10','0x11','0x12','0x13','0x14','0x15','0x16','0x17','0x18','0x19','0x1A','0x1B','0x1C','0x1D','0x1E','0x1F','0x20','0x21','0x22','0x23','0x24','0x25','0x26','0x27','0x28','0x29','0x2A','0x2B','0x2C','0x2D','0x2E','0x2F','0x30','0x31','0x32','0x33','0x34','0x35','0x36','0x37','0x38','0x39','0x3B','0x3C','0x3D','0x3E','0x3F','0x40','0x41','0x42','0x43','0x44','0x45','0x46','0x47','0x48','0x49','0x4A','0x4B','0x4C','0x4D','0x4E','0x4F','0x50','0x51','0x52','0x53','0x54','0x55','0x56','0x57','0x58','0x59','0x5A','0x5B','0x5C','0x5D','0x5E','0x5F','0x60','0x61','0x62','0x87','0x08','0x09','0x0A','0x0B','0x0C','0x0D','0x0E','0x0F','0x10','0x11','0x12','0x13','0x15','0x16','0x17','0x18','0x19','0x1A','0x1B','0x1C','0x1D','0x1E','0x1F','0x21','0x2A','0x2B','0x2C','0x2D','0x2E','0x2F','0x31','0x32','0x33','0x34','0x35','0x36','0x37','0x38','0x39','0x3A','0x3B','0x3C','0x3D','0x3E','0x89','0x8A','0x9B','0x9D','0x9E','0x9F','0xA0','0xA1','0xA2','0xA6','0x02','0x03','0x04','0x05','0x06','0x07','0x08','0x09','0x0A','0x0B','0x0C','0x0D','0x0E','0x0F','0x10','0x11','0x12','0x13','0x14','0x15','0x16','0x17','0x18','0x19','0x1A','0x1B','0x1C','0x1D','0x1E','0x1F','0x20','0x21','0x22','0x23','0x24','0x25','0x26','0x27','0x28','0x29','0x2A','0x2B','0x2C','0x2D','0x2E','0x2F','0x30','0x31','0x32','0x33','0x34','0x35','0x36','0x37','0x38','0x39','0x3A','0x3B','0x3C','0x3D','0x3E','0x3F','0x40','0x41','0x42','0x43','0x44','0x45','0x46','0x47','0x48','0x49','0x4A','0x4B','0x4C','0x4D','0x4E','0x4F','0x50','0x51','0x52','0x53','0x54','0x55','0x56','0x57','0x58','0x59','0x5A','0x5B','0x5C','0x5D','0x5E','0x5F','0x60','0x61','0x0E','0x43','0x49','0x4A','0x4E','0x4F','0x5E','0x02','0x03','0x04','0x05','0x14','0x1A','0x20','0x26','0x2C','0x44','0x46','0x47','0x48','0x4A','0x57','0x58']
    configData =         ['0x00','0x00','0x00','0x68','0x02','0xDC','0xAA','0xDD','0xDF','0x02','0x05','0x11','0x39','0x00','0x00','0x00','0x39','0x00','0x00','0x00','0x39','0x00','0x00','0x00','0x39','0x00','0x00','0x00','0x55','0x04','0x10','0x00','0x10','0x00','0x0C','0x32','0x00','0x32','0x00','0x32','0x00','0x32','0x00','0x05','0x05','0x0F','0x03','0x00','0x03','0x00','0x03','0x00','0x03','0x00','0x11','0x00','0x00','0x00','0x01','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x01','0x00','0x00','0x00','0x00','0x02','0xA0','0x00','0x80','0x60','0x02','0x60','0x04','0x40','0x20','0x00','0x0F','0x32','0x00','0x00','0x21','0x05','0x30','0x00','0x00','0x01','0x02','0x09','0x3B','0x28','0x06','0x09','0x3B','0x28','0x02','0x09','0x3B','0x28','0x06','0x09','0x3B','0x28','0x02','0x09','0x3B','0x28','0x02','0x09','0x3B','0x28','0x02','0x09','0x3B','0x28','0x06','0xCC','0x00','0x19','0x01','0x09','0x3B','0x28','0x01','0x09','0x3B','0x28','0x00','0x00','0x40','0xFF','0x00','0x40','0x01','0x00','0x00','0x00','0x00','0x01','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x40','0x01','0x00','0x00','0x00','0x00','0x01','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x0B','0x0B','0x0B','0x0B','0x00','0x00','0x00','0x00','0xB0','0x00','0x00','0x00','0x00','0x80','0x0F','0x00','0x00','0x00','0x00','0x00','0x0F','0x00','0x00','0x00','0x00','0x00','0x0F','0x00','0x00','0x0F','0x00','0x00','0x01','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x41','0x54','0x42','0x30','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0xC0','0x02','0x02','0x02','0x19','0x01','0x00','0x66','0x02','0x00','0xFF','0x00','0x00','0x00','0x80','0x05','0x00','0x00','0x00','0x00','0x80','0x00','0x00','0x00','0x00','0x00','0x2C','0x00','0x00','0x00','0x00','0xA0','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x1F','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x13','0x22','0x0C','0x0B','0x07','0x3F','0x17','0x2C','0x08','0x07','0x07','0x3F','0x00','0x00','0x00','0x00','0xC0','0x02','0x00','0x00','0x00','0x00','0x80','0x2B','0x00','0x01','0x87','0x03','0x19','0x19','0x00','0x42','0x03','0x00','0x00','0x04','0x00','0x00','0x00','0x02','0x03','0x00','0x11','0x06','0x0D','0x00','0xFA','0x13','0x24','0x0C','0x0B','0x07','0x3F','0x03','0x35','0x05','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x02','0x01','0x05','0x05','0x49','0x02','0x00','0x00','0x03','0x01','0x03','0x00','0x00','0x00','0x00','0x00','0x2F','0x00','0x0A','0x0A','0x1C','0x44','0x01']
    
    writeData(port,configAddrHighByte,configAddrLowByte,configData)

    # print('--- Postamble ---')
    configPostambleAddrHighByte = ['0x05','0x00','0x05','0x0B','0x0B']
    configPostambleAddrLowByte  = ['0x14','0x1C','0x40','0x24','0x25']
    configPostambleData         = ['0x01','0x01','0x00','0xC3','0x02']

    writeData(port,configPostambleAddrHighByte,configPostambleAddrLowByte,configPostambleData)

    print('--- Clock Chip programmed ---')

    if input("Continue to programming NVM? (y/n)") == 'y':
        burnToNVM(port)

    closePort(port)

if __name__ == '__main__':
    configureClockChip()